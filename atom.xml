<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[GYF1]]></title>
  <subtitle><![CDATA[Web Platform, Cloud and Mobile Application Development]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://blog.gyf1.com/"/>
  <updated>2015-02-27T03:37:41.346Z</updated>
  <id>http://blog.gyf1.com/</id>
  
  <author>
    <name><![CDATA[GYF1]]></name>
    <email><![CDATA[admin@gyf1.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Connect to a Remote MongoDB]]></title>
    <link href="http://blog.gyf1.com/2015/02/27/connect-to-a-remote-mongodb/"/>
    <id>http://blog.gyf1.com/2015/02/27/connect-to-a-remote-mongodb/</id>
    <published>2015-02-27T03:33:44.000Z</published>
    <updated>2015-02-27T03:37:19.000Z</updated>
    <content type="html"><![CDATA[<p>&#x670D;&#x52A1;&#x5668;&#x4E0A;&#x88C5;mongodb&#xFF0C;&#x5982;&#x4F55;&#x5728;&#x672C;&#x5730;&#x901A;&#x8FC7;Robomongo&#x6216;&#x8005;MongoHub&#x6765;&#x8BBF;&#x95EE;</p>
<p>Here&#x2019;s what you need to get started:</p>
<pre><code>Install MongoDB <span class="function_start"><span class="keyword">on</span></span> your Server. There are a million tutorials out there, <span class="keyword">but</span> here&#x2019;s <span class="keyword">the</span> one I used <span class="keyword">at</span> mongodb.org.
If you installed <span class="keyword">with</span> apt-<span class="keyword">get</span> install mongodb <span class="keyword">instead of</span>  apt-<span class="keyword">get</span> install mongodb-<span class="number">10</span>gen here&#x2019;s how <span class="keyword">to</span> UNINSTALL <span class="keyword">the</span> older <span class="property">version</span> <span class="keyword">after</span> shutting down gracefully so you don&#x2019;t wind up <span class="keyword">with</span> an infuriating mongod.lock <span class="type">file</span>.
mongo use admin db.shutdownServer() sudo apt-<span class="keyword">get</span> remove mongodb sudo apt-<span class="keyword">get</span> autoremove sudo reboot
<span class="number">1</span>
<span class="number">2</span>
<span class="number">3</span>
<span class="number">4</span>
<span class="number">5</span>
<span class="number">6</span>

mongo
use admin
db.shutdownServer()
sudo apt-<span class="keyword">get</span> remove mongodb
sudo apt-<span class="keyword">get</span> autoremove
sudo reboot

Then go ahead <span class="keyword">and</span> install <span class="keyword">the</span> mongodb-<span class="number">10</span>gen (latest stable) <span class="property">version</span>.
Download <span class="keyword">and</span> install MongoHub <span class="keyword">for</span> Mac OS X.
</code></pre><p>Secure MongoDB.</p>
<pre><code>Start <span class="operator">the</span> <span class="built_in">shell</span> <span class="operator">and</span> <span class="built_in">add</span> <span class="operator">an</span> administrative user <span class="keyword">for</span> <span class="operator">the</span> server.
$ ./mongo use admin db.addUser(<span class="string">&quot;mongoadmin&quot;</span>, <span class="string">&quot;anadminpassword&quot;</span>)
<span class="number">1</span>
<span class="number">2</span>
<span class="number">3</span>

$ ./mongo
use admin
db.addUser(<span class="string">&quot;mongoadmin&quot;</span>, <span class="string">&quot;anadminpassword&quot;</span>)

Note: On my <span class="keyword">system</span>, typing ./mongo doesn&#x2019;t work, but plain mongo does.
Authenticate, still <span class="operator">in</span> <span class="operator">the</span> <span class="built_in">shell</span>.
db.auth(<span class="string">&quot;mongoadmin&quot;</span>, <span class="string">&quot;anadminpassword&quot;</span>)
<span class="number">1</span>

db.auth(<span class="string">&quot;mongoadmin&quot;</span>, <span class="string">&quot;anadminpassword&quot;</span>)
Configure <span class="operator">a</span> specific user <span class="keyword">for</span> another database.
use projectx db.addUser(<span class="string">&quot;joe&quot;</span>, <span class="string">&quot;passwordForJoe&quot;</span>)
<span class="number">1</span>
<span class="number">2</span>

use projectx
db.addUser(<span class="string">&quot;joe&quot;</span>, <span class="string">&quot;passwordForJoe&quot;</span>)
Exit <span class="operator">the</span> MongoDB <span class="built_in">shell</span>.
exit
<span class="number">1</span>

exit
Edit <span class="operator">the</span> mongodb.conf <span class="built_in">file</span> <span class="built_in">to</span> enable authentication.
sudo nano /etc/mongodb.conf
<span class="number">1</span>

sudo nano /etc/mongodb.conf

Uncomment this <span class="built_in">line</span>.
auth=<span class="constant">true</span>
<span class="number">1</span>

auth=<span class="constant">true</span>
Restart MongoDB
sudo /etc/init.d/mongodb restart
<span class="number">1</span>

sudo /etc/init.d/mongodb restart
</code></pre><p><a id="more"></a><br><a href="http://stackoverflow.com/questions/25568465/acces-mongodb-from-other-server" target="_blank" rel="external">http://stackoverflow.com/questions/25568465/acces-mongodb-from-other-server</a><br><a href="http://ghosttx.com/2012/03/how-to-connect-to-a-remote-mongodb-server-with-mongohub-for-mac/" target="_blank" rel="external">http://ghosttx.com/2012/03/how-to-connect-to-a-remote-mongodb-server-with-mongohub-for-mac/</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>&#x670D;&#x52A1;&#x5668;&#x4E0A;&#x88C5;mongodb&#xFF0C;&#x5982;&#x4F55;&#x5728;&#x672C;&#x5730;&#x901A;&#x8FC7;Robomongo&#x6216;&#x8005;MongoHub&#x6765;&#x8BBF;&#x95EE;</p>
<p>Here&#x2019;s what you need to get started:</p>
<pre><code>Install MongoDB <span class="function_start"><span class="keyword">on</span></span> your Server. There are a million tutorials out there, <span class="keyword">but</span> here&#x2019;s <span class="keyword">the</span> one I used <span class="keyword">at</span> mongodb.org.
If you installed <span class="keyword">with</span> apt-<span class="keyword">get</span> install mongodb <span class="keyword">instead of</span>  apt-<span class="keyword">get</span> install mongodb-<span class="number">10</span>gen here&#x2019;s how <span class="keyword">to</span> UNINSTALL <span class="keyword">the</span> older <span class="property">version</span> <span class="keyword">after</span> shutting down gracefully so you don&#x2019;t wind up <span class="keyword">with</span> an infuriating mongod.lock <span class="type">file</span>.
mongo use admin db.shutdownServer() sudo apt-<span class="keyword">get</span> remove mongodb sudo apt-<span class="keyword">get</span> autoremove sudo reboot
<span class="number">1</span>
<span class="number">2</span>
<span class="number">3</span>
<span class="number">4</span>
<span class="number">5</span>
<span class="number">6</span>

mongo
use admin
db.shutdownServer()
sudo apt-<span class="keyword">get</span> remove mongodb
sudo apt-<span class="keyword">get</span> autoremove
sudo reboot

Then go ahead <span class="keyword">and</span> install <span class="keyword">the</span> mongodb-<span class="number">10</span>gen (latest stable) <span class="property">version</span>.
Download <span class="keyword">and</span> install MongoHub <span class="keyword">for</span> Mac OS X.
</code></pre><p>Secure MongoDB.</p>
<pre><code>Start <span class="operator">the</span> <span class="built_in">shell</span> <span class="operator">and</span> <span class="built_in">add</span> <span class="operator">an</span> administrative user <span class="keyword">for</span> <span class="operator">the</span> server.
$ ./mongo use admin db.addUser(<span class="string">&quot;mongoadmin&quot;</span>, <span class="string">&quot;anadminpassword&quot;</span>)
<span class="number">1</span>
<span class="number">2</span>
<span class="number">3</span>

$ ./mongo
use admin
db.addUser(<span class="string">&quot;mongoadmin&quot;</span>, <span class="string">&quot;anadminpassword&quot;</span>)

Note: On my <span class="keyword">system</span>, typing ./mongo doesn&#x2019;t work, but plain mongo does.
Authenticate, still <span class="operator">in</span> <span class="operator">the</span> <span class="built_in">shell</span>.
db.auth(<span class="string">&quot;mongoadmin&quot;</span>, <span class="string">&quot;anadminpassword&quot;</span>)
<span class="number">1</span>

db.auth(<span class="string">&quot;mongoadmin&quot;</span>, <span class="string">&quot;anadminpassword&quot;</span>)
Configure <span class="operator">a</span> specific user <span class="keyword">for</span> another database.
use projectx db.addUser(<span class="string">&quot;joe&quot;</span>, <span class="string">&quot;passwordForJoe&quot;</span>)
<span class="number">1</span>
<span class="number">2</span>

use projectx
db.addUser(<span class="string">&quot;joe&quot;</span>, <span class="string">&quot;passwordForJoe&quot;</span>)
Exit <span class="operator">the</span> MongoDB <span class="built_in">shell</span>.
exit
<span class="number">1</span>

exit
Edit <span class="operator">the</span> mongodb.conf <span class="built_in">file</span> <span class="built_in">to</span> enable authentication.
sudo nano /etc/mongodb.conf
<span class="number">1</span>

sudo nano /etc/mongodb.conf

Uncomment this <span class="built_in">line</span>.
auth=<span class="constant">true</span>
<span class="number">1</span>

auth=<span class="constant">true</span>
Restart MongoDB
sudo /etc/init.d/mongodb restart
<span class="number">1</span>

sudo /etc/init.d/mongodb restart
</code></pre><p>]]>
    
    </summary>
    
      <category term="MongoDB" scheme="http://blog.gyf1.com/tags/mongodb/"/>
    
      <category term="Database" scheme="http://blog.gyf1.com/categories/database/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ng-bind-html call function]]></title>
    <link href="http://blog.gyf1.com/2015/02/26/ng-bind-html-call-function/"/>
    <id>http://blog.gyf1.com/2015/02/26/ng-bind-html-call-function/</id>
    <published>2015-02-26T09:00:14.000Z</published>
    <updated>2015-02-26T09:02:40.000Z</updated>
    <content type="html"><![CDATA[<p>&#x5728;&#x9875;&#x9762;&#x4E0A;&#x7ED1;&#x5B9A;&#x7684;html&#xFF0C;&#x65E0;&#x6CD5;&#x6267;&#x884C;&#x91CC;&#x9762;&#x7684;&#x4E8B;&#x4EF6;&#x65B9;&#x6CD5;&#xFF0C;&#x6BD4;&#x5982;&#x8BF4;ng-click<br>&#x89E3;&#x51B3;&#x65B9;&#x6CD5;&#x662F;&#x901A;&#x8FC7;$compile<br><a id="more"></a><br><a href="http://stackoverflow.com/questions/20297638/call-function-inside-sce-trustashtml-string-in-angular-js" target="_blank" rel="external">http://stackoverflow.com/questions/20297638/call-function-inside-sce-trustashtml-string-in-angular-js</a><br><a href="http://stackoverflow.com/questions/20623118/rendering-directives-within-sce-trustashtml" target="_blank" rel="external">http://stackoverflow.com/questions/20623118/rendering-directives-within-sce-trustashtml</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>&#x5728;&#x9875;&#x9762;&#x4E0A;&#x7ED1;&#x5B9A;&#x7684;html&#xFF0C;&#x65E0;&#x6CD5;&#x6267;&#x884C;&#x91CC;&#x9762;&#x7684;&#x4E8B;&#x4EF6;&#x65B9;&#x6CD5;&#xFF0C;&#x6BD4;&#x5982;&#x8BF4;ng-click<br>&#x89E3;&#x51B3;&#x65B9;&#x6CD5;&#x662F;&#x901A;&#x8FC7;$compile<br>]]>
    
    </summary>
    
      <category term="AngularJS" scheme="http://blog.gyf1.com/tags/angularjs/"/>
    
      <category term="JavaScript" scheme="http://blog.gyf1.com/categories/javascript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[regexp practice 1]]></title>
    <link href="http://blog.gyf1.com/2015/02/26/regexp-practice-1/"/>
    <id>http://blog.gyf1.com/2015/02/26/regexp-practice-1/</id>
    <published>2015-02-26T08:57:24.000Z</published>
    <updated>2015-02-26T09:06:39.000Z</updated>
    <content type="html"><![CDATA[<p>&#x6709;&#x4E00;&#x6BB5;html&#x7684;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x5982;&#x4E0B;</p>
<pre><code><span class="tag">&lt;<span class="title">p</span>&gt;</span>&#x770B;<span class="tag">&lt;<span class="title">span</span> <span class="attribute">style</span>=<span class="value">&quot;font-size: 15px; line-height: 1.5;&quot;</span>&gt;</span>&#x56FE;&#x8BF4;&#x8BDD;<span class="tag">&lt;/<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">p</span>&gt;</span>
<span class="tag">&lt;<span class="title">p</span>&gt;</span><span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">&quot;http://a.com/1.png&quot;</span> <span class="attribute">alt</span>=<span class="value">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="title">p</span>&gt;</span>
<span class="tag">&lt;<span class="title">p</span>&gt;</span> <span class="tag">&lt;/<span class="title">p</span>&gt;</span>
<span class="tag">&lt;<span class="title">p</span>&gt;</span> <span class="tag">&lt;/<span class="title">p</span>&gt;</span>
<span class="tag">&lt;<span class="title">p</span>&gt;</span>&#x518D;&#x6765;&#x4E00;&#x5F20;&#x56FE;&#x7247;<span class="tag">&lt;/<span class="title">p</span>&gt;</span>
<span class="tag">&lt;<span class="title">p</span>&gt;</span><span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">&quot;http://a.com/2.png&quot;</span> <span class="attribute">alt</span>=<span class="value">&quot;&quot;</span> <span class="attribute">width</span>=<span class="value">&quot;609&quot;</span> <span class="attribute">height</span>=<span class="value">&quot;590&quot;</span>&gt;</span><span class="tag">&lt;/<span class="title">p</span>&gt;</span>
</code></pre><p>&#x9700;&#x8981;&#x80FD;&#x591F;&#x9488;&#x5BF9;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x7684;img&#x6807;&#x7B7E;&#x505A;&#x5982;&#x4E0B;&#x5904;&#x7406;&#xFF1A;</p>
<ol>
<li>&#x52A0;&#x4E0A; width=&#x201D;100%&#x201D; height=&#x201D;auto&#x201D;&#xFF0C;&#x5982;&#x679C;img&#x5DF2;&#x7ECF;&#x5B58;&#x5728;width&#x548C;hegiht&#xFF0C;&#x9700;&#x8981;&#x5148;&#x53BB;&#x6389;</li>
<li>&#x589E;&#x52A0;&#x4E00;&#x4E2A;onlick&#x4E8B;&#x4EF6;&#xFF0C;&#x4F20;&#x5165;img&#x7684;src&#x4F5C;&#x4E3A;&#x53C2;&#x6570;</li>
</ol>
<p>&#x671F;&#x5F85;&#x7684;&#x7ED3;&#x679C;&#x662F;</p>
<pre><code><span class="tag">&lt;<span class="title">p</span>&gt;</span>&#x770B;<span class="tag">&lt;<span class="title">span</span> <span class="attribute">style</span>=<span class="value">&quot;font-size: 15px; line-height: 1.5;&quot;</span>&gt;</span>&#x56FE;&#x8BF4;&#x8BDD;<span class="tag">&lt;/<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">p</span>&gt;</span>
<span class="tag">&lt;<span class="title">p</span>&gt;</span><span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">&quot;http://a.com/1.png&quot;</span> <span class="attribute">alt</span>=<span class="value">&quot;&quot;</span> <span class="attribute">width</span>=<span class="value">&quot;100%&quot;</span> <span class="attribute">height</span>=<span class="value">&quot;auto&quot;</span> <span class="attribute">onlick</span>=<span class="value">&quot;foo(&apos;http://a.com/1.png&apos;)&quot;</span>&gt;</span><span class="tag">&lt;/<span class="title">p</span>&gt;</span>
<span class="tag">&lt;<span class="title">p</span>&gt;</span> <span class="tag">&lt;/<span class="title">p</span>&gt;</span>
<span class="tag">&lt;<span class="title">p</span>&gt;</span> <span class="tag">&lt;/<span class="title">p</span>&gt;</span>
<span class="tag">&lt;<span class="title">p</span>&gt;</span>&#x518D;&#x6765;&#x4E00;&#x5F20;&#x56FE;&#x7247;<span class="tag">&lt;/<span class="title">p</span>&gt;</span>
<span class="tag">&lt;<span class="title">p</span>&gt;</span><span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">&quot;http://a.com/2.png&quot;</span> <span class="attribute">alt</span>=<span class="value">&quot;&quot;</span> <span class="attribute">width</span>=<span class="value">&quot;100%&quot;</span> <span class="attribute">height</span>=<span class="value">&quot;auto&quot;</span> <span class="attribute">onlick</span>=<span class="value">&quot;foo(&apos;http://a.com/2.png&apos;)&quot;</span>&gt;</span><span class="tag">&lt;/<span class="title">p</span>&gt;</span>
</code></pre><p><a id="more"></a><br>regular expression add width to html img<br>javascript reg remove img width<br>javascript regular expression remove width height<br>javascript regular expression get img src</p>
<p><a href="http://segmentfault.com/q/1010000002565984" target="_blank" rel="external">http://segmentfault.com/q/1010000002565984</a><br><a href="http://stackoverflow.com/questions/21190381/pagedown-adding-a-css-class-to-every-img-tag-with-javascript" target="_blank" rel="external">http://stackoverflow.com/questions/21190381/pagedown-adding-a-css-class-to-every-img-tag-with-javascript</a><br><a href="http://stackoverflow.com/questions/5618851/change-width-and-height-regex-javascript" target="_blank" rel="external">http://stackoverflow.com/questions/5618851/change-width-and-height-regex-javascript</a><br><a href="http://vikku.info/codesnippets/php/replace-width-and-height-of-html-element-using-regular-expression/" target="_blank" rel="external">http://vikku.info/codesnippets/php/replace-width-and-height-of-html-element-using-regular-expression/</a><br><a href="http://www.experts-exchange.com/Programming/Languages/Scripting/PHP/Q_21668064.html" target="_blank" rel="external">http://www.experts-exchange.com/Programming/Languages/Scripting/PHP/Q_21668064.html</a></p>
<p>&#x63D0;&#x53D6;&#x51FA;src&#xFF1A;<br><a href="http://stackoverflow.com/questions/12393671/substring-regex-to-get-a-src-value-held-in-a-string" target="_blank" rel="external">http://stackoverflow.com/questions/12393671/substring-regex-to-get-a-src-value-held-in-a-string</a><br><a href="http://stackoverflow.com/questions/14939296/extract-image-src-from-a-string" target="_blank" rel="external">http://stackoverflow.com/questions/14939296/extract-image-src-from-a-string</a></p>
<p><a href="http://www.jbxue.com/article/7740.html" target="_blank" rel="external">http://www.jbxue.com/article/7740.html</a><br><a href="http://stackoverflow.com/questions/18664997/how-can-i-use-regular-expression-to-grab-an-img-tag" target="_blank" rel="external">http://stackoverflow.com/questions/18664997/how-can-i-use-regular-expression-to-grab-an-img-tag</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>&#x6709;&#x4E00;&#x6BB5;html&#x7684;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x5982;&#x4E0B;</p>
<pre><code><span class="tag">&lt;<span class="title">p</span>&gt;</span>&#x770B;<span class="tag">&lt;<span class="title">span</span> <span class="attribute">style</span>=<span class="value">&quot;font-size: 15px; line-height: 1.5;&quot;</span>&gt;</span>&#x56FE;&#x8BF4;&#x8BDD;<span class="tag">&lt;/<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">p</span>&gt;</span>
<span class="tag">&lt;<span class="title">p</span>&gt;</span><span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">&quot;http://a.com/1.png&quot;</span> <span class="attribute">alt</span>=<span class="value">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="title">p</span>&gt;</span>
<span class="tag">&lt;<span class="title">p</span>&gt;</span> <span class="tag">&lt;/<span class="title">p</span>&gt;</span>
<span class="tag">&lt;<span class="title">p</span>&gt;</span> <span class="tag">&lt;/<span class="title">p</span>&gt;</span>
<span class="tag">&lt;<span class="title">p</span>&gt;</span>&#x518D;&#x6765;&#x4E00;&#x5F20;&#x56FE;&#x7247;<span class="tag">&lt;/<span class="title">p</span>&gt;</span>
<span class="tag">&lt;<span class="title">p</span>&gt;</span><span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">&quot;http://a.com/2.png&quot;</span> <span class="attribute">alt</span>=<span class="value">&quot;&quot;</span> <span class="attribute">width</span>=<span class="value">&quot;609&quot;</span> <span class="attribute">height</span>=<span class="value">&quot;590&quot;</span>&gt;</span><span class="tag">&lt;/<span class="title">p</span>&gt;</span>
</code></pre><p>&#x9700;&#x8981;&#x80FD;&#x591F;&#x9488;&#x5BF9;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x7684;img&#x6807;&#x7B7E;&#x505A;&#x5982;&#x4E0B;&#x5904;&#x7406;&#xFF1A;</p>
<ol>
<li>&#x52A0;&#x4E0A; width=&#x201D;100%&#x201D; height=&#x201D;auto&#x201D;&#xFF0C;&#x5982;&#x679C;img&#x5DF2;&#x7ECF;&#x5B58;&#x5728;width&#x548C;hegiht&#xFF0C;&#x9700;&#x8981;&#x5148;&#x53BB;&#x6389;</li>
<li>&#x589E;&#x52A0;&#x4E00;&#x4E2A;onlick&#x4E8B;&#x4EF6;&#xFF0C;&#x4F20;&#x5165;img&#x7684;src&#x4F5C;&#x4E3A;&#x53C2;&#x6570;</li>
</ol>
<p>&#x671F;&#x5F85;&#x7684;&#x7ED3;&#x679C;&#x662F;</p>
<pre><code><span class="tag">&lt;<span class="title">p</span>&gt;</span>&#x770B;<span class="tag">&lt;<span class="title">span</span> <span class="attribute">style</span>=<span class="value">&quot;font-size: 15px; line-height: 1.5;&quot;</span>&gt;</span>&#x56FE;&#x8BF4;&#x8BDD;<span class="tag">&lt;/<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">p</span>&gt;</span>
<span class="tag">&lt;<span class="title">p</span>&gt;</span><span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">&quot;http://a.com/1.png&quot;</span> <span class="attribute">alt</span>=<span class="value">&quot;&quot;</span> <span class="attribute">width</span>=<span class="value">&quot;100%&quot;</span> <span class="attribute">height</span>=<span class="value">&quot;auto&quot;</span> <span class="attribute">onlick</span>=<span class="value">&quot;foo(&apos;http://a.com/1.png&apos;)&quot;</span>&gt;</span><span class="tag">&lt;/<span class="title">p</span>&gt;</span>
<span class="tag">&lt;<span class="title">p</span>&gt;</span> <span class="tag">&lt;/<span class="title">p</span>&gt;</span>
<span class="tag">&lt;<span class="title">p</span>&gt;</span> <span class="tag">&lt;/<span class="title">p</span>&gt;</span>
<span class="tag">&lt;<span class="title">p</span>&gt;</span>&#x518D;&#x6765;&#x4E00;&#x5F20;&#x56FE;&#x7247;<span class="tag">&lt;/<span class="title">p</span>&gt;</span>
<span class="tag">&lt;<span class="title">p</span>&gt;</span><span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">&quot;http://a.com/2.png&quot;</span> <span class="attribute">alt</span>=<span class="value">&quot;&quot;</span> <span class="attribute">width</span>=<span class="value">&quot;100%&quot;</span> <span class="attribute">height</span>=<span class="value">&quot;auto&quot;</span> <span class="attribute">onlick</span>=<span class="value">&quot;foo(&apos;http://a.com/2.png&apos;)&quot;</span>&gt;</span><span class="tag">&lt;/<span class="title">p</span>&gt;</span>
</code></pre><p>]]>
    
    </summary>
    
      <category term="RegExp" scheme="http://blog.gyf1.com/tags/regexp/"/>
    
      <category term="JavaScript" scheme="http://blog.gyf1.com/categories/javascript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ionic image viewer]]></title>
    <link href="http://blog.gyf1.com/2015/02/26/ionic-image-viewer/"/>
    <id>http://blog.gyf1.com/2015/02/26/ionic-image-viewer/</id>
    <published>2015-02-26T08:40:42.000Z</published>
    <updated>2015-02-26T08:41:42.000Z</updated>
    <content type="html"><![CDATA[<p>&#x5982;&#x4F55;&#x5728;ionic&#x91CC;&#x9884;&#x89C8;&#x56FE;&#x7247;<br><a id="more"></a><br><a href="http://codepen.io/anandvj/pen/KwmMGY" target="_blank" rel="external">http://codepen.io/anandvj/pen/KwmMGY</a><br><a href="http://forum.ionicframework.com/t/dealing-with-images/2313/2" target="_blank" rel="external">http://forum.ionicframework.com/t/dealing-with-images/2313/2</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>&#x5982;&#x4F55;&#x5728;ionic&#x91CC;&#x9884;&#x89C8;&#x56FE;&#x7247;<br>]]>
    
    </summary>
    
      <category term="Ionic" scheme="http://blog.gyf1.com/tags/ionic/"/>
    
      <category term="Mobile" scheme="http://blog.gyf1.com/categories/mobile/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ionic image zoom]]></title>
    <link href="http://blog.gyf1.com/2015/02/26/ionic-image-zoom/"/>
    <id>http://blog.gyf1.com/2015/02/26/ionic-image-zoom/</id>
    <published>2015-02-26T08:38:17.000Z</published>
    <updated>2015-02-26T09:06:01.000Z</updated>
    <content type="html"><![CDATA[<p>&#x5982;&#x4F55;&#x5728;ionic&#x5B9E;&#x73B0;&#x5728;&#x624B;&#x673A;&#x4E0A;&#x7F29;&#x653E;&#x56FE;&#x7247;<br><a id="more"></a><br>ionic image zoom<br><a href="http://codepen.io/arnaud-f/pen/CDatr" target="_blank" rel="external">http://codepen.io/arnaud-f/pen/CDatr</a><br><a href="https://github.com/driftyco/ionic/issues/679" target="_blank" rel="external">https://github.com/driftyco/ionic/issues/679</a><br><a href="http://forum.ionicframework.com/t/how-to-zooming-and-scrolling-on-a-fullscreen-image/10204" target="_blank" rel="external">http://forum.ionicframework.com/t/how-to-zooming-and-scrolling-on-a-fullscreen-image/10204</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>&#x5982;&#x4F55;&#x5728;ionic&#x5B9E;&#x73B0;&#x5728;&#x624B;&#x673A;&#x4E0A;&#x7F29;&#x653E;&#x56FE;&#x7247;<br>]]>
    
    </summary>
    
      <category term="Ionic" scheme="http://blog.gyf1.com/tags/ionic/"/>
    
      <category term="Mobile" scheme="http://blog.gyf1.com/categories/mobile/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ionic play audio and video]]></title>
    <link href="http://blog.gyf1.com/2015/02/25/ionic-play-audio-and-video/"/>
    <id>http://blog.gyf1.com/2015/02/25/ionic-play-audio-and-video/</id>
    <published>2015-02-25T08:18:42.000Z</published>
    <updated>2015-02-25T08:20:26.000Z</updated>
    <content type="html"><![CDATA[<p><a href="https://blog.nraboy.com/2015/01/embed-video-ios-android-ionicframework-app/" target="_blank" rel="external">https://blog.nraboy.com/2015/01/embed-video-ios-android-ionicframework-app/</a><br><a href="http://devdactic.com/images-videos-fullscreen-ionic/" target="_blank" rel="external">http://devdactic.com/images-videos-fullscreen-ionic/</a><br><a href="https://blog.nraboy.com/2014/11/playing-audio-android-ios-ionicframework-app/" target="_blank" rel="external">https://blog.nraboy.com/2014/11/playing-audio-android-ios-ionicframework-app/</a><br><a href="https://github.com/sirius2013/Angularjs-Ionic-Audio-VideoApp" target="_blank" rel="external">https://github.com/sirius2013/Angularjs-Ionic-Audio-VideoApp</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="https://blog.nraboy.com/2015/01/embed-video-ios-android-ionicframework-app/" target="_blank" rel="external">https://blog.nraboy.]]>
    </summary>
    
      <category term="Ionic" scheme="http://blog.gyf1.com/tags/ionic/"/>
    
      <category term="JavaScript" scheme="http://blog.gyf1.com/categories/javascript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[JS Task Runners Comparison: Grunt vs Cake vs Gulp vs Broccoli]]></title>
    <link href="http://blog.gyf1.com/2015/02/25/js-task-runners-comparison-grunt-vs-cake-vs-gulp-vs-broccoli/"/>
    <id>http://blog.gyf1.com/2015/02/25/js-task-runners-comparison-grunt-vs-cake-vs-gulp-vs-broccoli/</id>
    <published>2015-02-25T08:14:18.000Z</published>
    <updated>2015-02-25T08:15:45.000Z</updated>
    <content type="html"><![CDATA[<p>Programming single-page applications is great to build modern web application. Publishing NPM packages are awesome if you write Node.js softwares. What&#x2019;s the link between this two subjects? Both require a complex tool chain (asset managemenet, CSS-preprocessor files compiling, test preparation, JS files concatenation, etc.) to publish your software. In this post, we are going to have look to a new trend: the task runners. They are the new generation of Makefiles for the JS world.</p>
<p>Task runners are a set of tools to make build operation clean and well documented. They provide helpers to manage operations on the project file system via the command line.</p>
<p><a id="more"></a><br><a href="http://blog.cozycloud.cc/technic/2014/06/18/task-runners-comparison/" target="_blank" rel="external">http://blog.cozycloud.cc/technic/2014/06/18/task-runners-comparison/</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Programming single-page applications is great to build modern web application. Publishing NPM packages are awesome if you write Node.js softwares. What&#x2019;s the link between this two subjects? Both require a complex tool chain (asset managemenet, CSS-preprocessor files compiling, test preparation, JS files concatenation, etc.) to publish your software. In this post, we are going to have look to a new trend: the task runners. They are the new generation of Makefiles for the JS world.</p>
<p>Task runners are a set of tools to make build operation clean and well documented. They provide helpers to manage operations on the project file system via the command line.</p>
<p>]]>
    
    </summary>
    
      <category term="Grunt" scheme="http://blog.gyf1.com/tags/grunt/"/>
    
      <category term="Gulp" scheme="http://blog.gyf1.com/tags/gulp/"/>
    
      <category term="JavaScript" scheme="http://blog.gyf1.com/categories/javascript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[html5 record audio]]></title>
    <link href="http://blog.gyf1.com/2015/02/14/html5-record-audio/"/>
    <id>http://blog.gyf1.com/2015/02/14/html5-record-audio/</id>
    <published>2015-02-14T00:27:47.000Z</published>
    <updated>2015-02-14T00:29:12.000Z</updated>
    <content type="html"><![CDATA[<p>&#x5229;&#x7528;html5&#x5B9E;&#x73B0;&#x5F55;&#x97F3;&#x529F;&#x80FD;<br><a id="more"></a></p>
<p><a href="https://nusofthq.com/blog/recording-mp3-using-only-html5-and-javascript-recordmp3-js/" target="_blank" rel="external">https://nusofthq.com/blog/recording-mp3-using-only-html5-and-javascript-recordmp3-js/</a><br><a href="https://github.com/daaain/JSSoundRecorder" target="_blank" rel="external">https://github.com/daaain/JSSoundRecorder</a><br><a href="http://stackoverflow.com/questions/16413063/html5-record-audio-to-file" target="_blank" rel="external">http://stackoverflow.com/questions/16413063/html5-record-audio-to-file</a><br><a href="https://github.com/mattdiamond/Recorderjs" target="_blank" rel="external">https://github.com/mattdiamond/Recorderjs</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>&#x5229;&#x7528;html5&#x5B9E;&#x73B0;&#x5F55;&#x97F3;&#x529F;&#x80FD;<br>]]>
    
    </summary>
    
      <category term="HTML5" scheme="http://blog.gyf1.com/tags/html5/"/>
    
      <category term="HTML" scheme="http://blog.gyf1.com/categories/html/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[news ticker]]></title>
    <link href="http://blog.gyf1.com/2015/02/11/news-ticker/"/>
    <id>http://blog.gyf1.com/2015/02/11/news-ticker/</id>
    <published>2015-02-11T08:49:11.000Z</published>
    <updated>2015-02-12T00:58:28.000Z</updated>
    <content type="html"><![CDATA[<p>&#x5B9E;&#x73B0;&#x6EDA;&#x52A8;&#x65B0;&#x95FB;</p>
<p><a id="more"></a><br><a href="http://www.jqueryrain.com/demo/jquery-news-ticker/page/3/" target="_blank" rel="external">http://www.jqueryrain.com/demo/jquery-news-ticker/page/3/</a><br><a href="http://jquery-plugins.net/tag/news-scroller" target="_blank" rel="external">http://jquery-plugins.net/tag/news-scroller</a><br><a href="http://www.hypergurl.com/marquee.html" target="_blank" rel="external">http://www.hypergurl.com/marquee.html</a></p>
<p><a href="https://github.com/rhodimus/jQuery-News-Ticker" target="_blank" rel="external">https://github.com/rhodimus/jQuery-News-Ticker</a><br><a href="https://github.com/paulpullen/sportsticker" target="_blank" rel="external">https://github.com/paulpullen/sportsticker</a><br><a href="https://github.com/search?o=desc&#x26;q=ticker&#x26;ref=searchresults&#x26;s=stars&#x26;type=Repositories&#x26;utf8=%E2%9C%93" target="_blank" rel="external">https://github.com/search?o=desc&amp;q=ticker&amp;ref=searchresults&amp;s=stars&amp;type=Repositories&amp;utf8=%E2%9C%93</a><br><a href="http://www.jquerynewsticker.com/" target="_blank" rel="external">http://www.jquerynewsticker.com/</a><br><a href="https://github.com/rhodimus/jQuery-News-Ticker" target="_blank" rel="external">https://github.com/rhodimus/jQuery-News-Ticker</a><br><a href="http://risq.github.io/jquery-advanced-news-ticker/" target="_blank" rel="external">http://risq.github.io/jquery-advanced-news-ticker/</a><br><a href="https://github.com/risq/jquery-advanced-news-ticker" target="_blank" rel="external">https://github.com/risq/jquery-advanced-news-ticker</a><br><a href="http://richhollis.github.io/vticker/" target="_blank" rel="external">http://richhollis.github.io/vticker/</a><br><a href="https://github.com/richhollis/vticker" target="_blank" rel="external">https://github.com/richhollis/vticker</a><br><a href="https://github.com/search?o=desc&#x26;q=news+ticker&#x26;s=stars&#x26;type=Repositories&#x26;utf8=%E2%9C%93" target="_blank" rel="external">https://github.com/search?o=desc&amp;q=news+ticker&amp;s=stars&amp;type=Repositories&amp;utf8=%E2%9C%93</a><br><a href="http://www.aakashweb.com/demos/jquery-easy-ticker/" target="_blank" rel="external">http://www.aakashweb.com/demos/jquery-easy-ticker/</a><br><a href="https://github.com/vaakash/jquery-easy-ticker" target="_blank" rel="external">https://github.com/vaakash/jquery-easy-ticker</a><br><a href="https://github.com/search?o=desc&#x26;q=scroller+news&#x26;ref=searchresults&#x26;s=stars&#x26;type=Repositories&#x26;utf8=%E2%9C%93" target="_blank" rel="external">https://github.com/search?o=desc&amp;q=scroller+news&amp;ref=searchresults&amp;s=stars&amp;type=Repositories&amp;utf8=%E2%9C%93</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>&#x5B9E;&#x73B0;&#x6EDA;&#x52A8;&#x65B0;&#x95FB;</p>
<p>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[meteor mongodb mongodump and mongorestore]]></title>
    <link href="http://blog.gyf1.com/2015/02/09/meteor-mongodb-mongodump-and-mongorestore/"/>
    <id>http://blog.gyf1.com/2015/02/09/meteor-mongodb-mongodump-and-mongorestore/</id>
    <published>2015-02-09T13:06:56.000Z</published>
    <updated>2015-02-09T13:11:33.000Z</updated>
    <content type="html"><![CDATA[<p>&#x5982;&#x4F55;&#x5907;&#x4EFD;&#x548C;&#x5BFC;&#x5165;meteor&#x7684;&#x6570;&#x636E;</p>
<ol>
<li>mongodump -d Telescope -o telescope_backup.json</li>
<li>rsync -avzP root@gyf1.com:/root/telescope_backup ./steven</li>
<li>&#x8FDB;&#x5165;&#x5230;&#x6587;&#x4EF6;&#x5939;telescope_backup.json&#x4E0B;&#x9762;&#xFF0C;&#x8FD0;&#x884C;&#x547D;&#x4EE4;mongorestore &#x2014;db meteor  -h localhost &#x2014;port 3001 &#x2014;drop Telescope</li>
</ol>
<p><a id="more"></a><br><a href="http://stackoverflow.com/questions/19505543/mongorestore-from-meteor-production-server-to-local" target="_blank" rel="external">http://stackoverflow.com/questions/19505543/mongorestore-from-meteor-production-server-to-local</a><br><a href="https://groups.google.com/forum/#!topic/meteor-talk/KvDWrqZpy-w" target="_blank" rel="external">https://groups.google.com/forum/#!topic/meteor-talk/KvDWrqZpy-w</a><br><a href="http://stackoverflow.com/questions/7521163/what-does-too-many-positional-options-mean-when-doing-a-mongoexport" target="_blank" rel="external">http://stackoverflow.com/questions/7521163/what-does-too-many-positional-options-mean-when-doing-a-mongoexport</a><br><a href="http://stackoverflow.com/questions/11255630/how-to-export-all-collection-in-mongodb" target="_blank" rel="external">http://stackoverflow.com/questions/11255630/how-to-export-all-collection-in-mongodb</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>&#x5982;&#x4F55;&#x5907;&#x4EFD;&#x548C;&#x5BFC;&#x5165;meteor&#x7684;&#x6570;&#x636E;</p>
<ol>
<li>mongodump -d Telescope -o telescope_backup.json</li>
<li>rsync -avzP root@gyf1.com:/root/telescope_backup ./steven</li>
<li>&#x8FDB;&#x5165;&#x5230;&#x6587;&#x4EF6;&#x5939;telescope_backup.json&#x4E0B;&#x9762;&#xFF0C;&#x8FD0;&#x884C;&#x547D;&#x4EE4;mongorestore &#x2014;db meteor  -h localhost &#x2014;port 3001 &#x2014;drop Telescope</li>
</ol>
<p>]]>
    
    </summary>
    
      <category term="Meteor" scheme="http://blog.gyf1.com/tags/meteor/"/>
    
      <category term="JavaScript" scheme="http://blog.gyf1.com/categories/javascript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[angular copy to clipboard]]></title>
    <link href="http://blog.gyf1.com/2015/02/04/angular-copy-to-clipboard/"/>
    <id>http://blog.gyf1.com/2015/02/04/angular-copy-to-clipboard/</id>
    <published>2015-02-04T11:32:54.000Z</published>
    <updated>2015-02-05T06:29:20.000Z</updated>
    <content type="html"><![CDATA[<p>js&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x4F7F;&#x7528;<a href="https://github.com/zeroclipboard/zeroclipboard" target="_blank" rel="external">zeroclipboard</a></p>
<p>angular&#x5982;&#x4F55;&#x5229;&#x7528;zeroclipboard&#x5C06;&#x5185;&#x5BB9;&#x590D;&#x5236;&#x5230;&#x526A;&#x8D34;&#x677F;</p>
<p><a id="more"></a><br><a href="https://github.com/zeroclipboard/zeroclipboard" target="_blank" rel="external">https://github.com/zeroclipboard/zeroclipboard</a></p>
<p><a href="https://github.com/asafdav/ng-clip" target="_blank" rel="external">https://github.com/asafdav/ng-clip</a><br><a href="http://stackoverflow.com/questions/25402959/ng-clip-copy-to-clipboard-is-not-working" target="_blank" rel="external">http://stackoverflow.com/questions/25402959/ng-clip-copy-to-clipboard-is-not-working</a></p>
<p><a href="https://github.com/chouseknecht/angular-clipboard" target="_blank" rel="external">https://github.com/chouseknecht/angular-clipboard</a><br><a href="http://chouseknecht.github.io/angular-clipboard/" target="_blank" rel="external">http://chouseknecht.github.io/angular-clipboard/</a></p>
<p><a href="https://sourcegraph.com/github.com/buttercoin/ng-clip@master" target="_blank" rel="external">https://sourcegraph.com/github.com/buttercoin/ng-clip@master</a></p>
<p><a href="http://plnkr.co/edit/xwV5Yn?p=preview" target="_blank" rel="external">http://plnkr.co/edit/xwV5Yn?p=preview</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>js&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x4F7F;&#x7528;<a href="https://github.com/zeroclipboard/zeroclipboard" target="_blank" rel="external">zeroclipboard</a></p>
<p>angular&#x5982;&#x4F55;&#x5229;&#x7528;zeroclipboard&#x5C06;&#x5185;&#x5BB9;&#x590D;&#x5236;&#x5230;&#x526A;&#x8D34;&#x677F;</p>
<p>]]>
    
    </summary>
    
      <category term="AngularJS" scheme="http://blog.gyf1.com/tags/angularjs/"/>
    
      <category term="JavaScript" scheme="http://blog.gyf1.com/categories/javascript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[CSS display: inline vs inline-block]]></title>
    <link href="http://blog.gyf1.com/2015/02/04/css-display-inline-vs-inline-block/"/>
    <id>http://blog.gyf1.com/2015/02/04/css-display-inline-vs-inline-block/</id>
    <published>2015-02-04T11:32:05.000Z</published>
    <updated>2015-02-04T06:38:42.000Z</updated>
    <content type="html"><![CDATA[<p>Inline elements:</p>
<ol>
<li>respect left &amp; right margins and padding, but not top &amp; bottom</li>
<li>cannot have a width and height set</li>
<li>allow other elements to sit to their left and right.</li>
</ol>
<p>Block elements:</p>
<ol>
<li>respect all of those</li>
<li>force a line break after the block element</li>
</ol>
<p>Inline-block elements:</p>
<ol>
<li>allow other elements to sit to their left and right</li>
<li>respect top &amp; bottom margins and padding</li>
<li>respect height and width</li>
</ol>
<p>From W3Schools:</p>
<pre><code>An inline element has no line break <span class="keyword">before</span> <span class="keyword">or</span> <span class="keyword">after</span> <span class="keyword">it</span>, <span class="keyword">and</span> <span class="keyword">it</span> tolerates HTML elements next <span class="keyword">to</span> <span class="keyword">it</span>.

A block element has <span class="keyword">some</span> whitespace <span class="keyword">above</span> <span class="keyword">and</span> <span class="keyword">below</span> <span class="keyword">it</span> <span class="keyword">and</span> <span class="keyword">does</span> <span class="keyword">not</span> tolerate any HTML elements next <span class="keyword">to</span> <span class="keyword">it</span>.

An inline-block element <span class="keyword">is</span> placed <span class="keyword">as</span> an inline element (<span class="function_start"><span class="keyword">on</span></span> <span class="keyword">the</span> same line <span class="keyword">as</span> adjacent content), <span class="keyword">but</span> <span class="keyword">it</span> behaves <span class="keyword">as</span> a block element.
</code></pre><p><a id="more"></a><br><a href="http://stackoverflow.com/questions/9189810/css-display-inline-vs-inline-block" target="_blank" rel="external">http://stackoverflow.com/questions/9189810/css-display-inline-vs-inline-block</a><br><a href="http://dustwell.com/div-span-inline-block.html" target="_blank" rel="external">http://dustwell.com/div-span-inline-block.html</a><br><a href="http://www.cnblogs.com/jdonson/archive/2011/06/10/2077932.html" target="_blank" rel="external">http://www.cnblogs.com/jdonson/archive/2011/06/10/2077932.html</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Inline elements:</p>
<ol>
<li>respect left &amp; right margins and padding, but not top &amp; bottom</li>
<li>cannot have a width and height set</li>
<li>allow other elements to sit to their left and right.</li>
</ol>
<p>Block elements:</p>
<ol>
<li>respect all of those</li>
<li>force a line break after the block element</li>
</ol>
<p>Inline-block elements:</p>
<ol>
<li>allow other elements to sit to their left and right</li>
<li>respect top &amp; bottom margins and padding</li>
<li>respect height and width</li>
</ol>
<p>From W3Schools:</p>
<pre><code>An inline element has no line break <span class="keyword">before</span> <span class="keyword">or</span> <span class="keyword">after</span> <span class="keyword">it</span>, <span class="keyword">and</span> <span class="keyword">it</span> tolerates HTML elements next <span class="keyword">to</span> <span class="keyword">it</span>.

A block element has <span class="keyword">some</span> whitespace <span class="keyword">above</span> <span class="keyword">and</span> <span class="keyword">below</span> <span class="keyword">it</span> <span class="keyword">and</span> <span class="keyword">does</span> <span class="keyword">not</span> tolerate any HTML elements next <span class="keyword">to</span> <span class="keyword">it</span>.

An inline-block element <span class="keyword">is</span> placed <span class="keyword">as</span> an inline element (<span class="function_start"><span class="keyword">on</span></span> <span class="keyword">the</span> same line <span class="keyword">as</span> adjacent content), <span class="keyword">but</span> <span class="keyword">it</span> behaves <span class="keyword">as</span> a block element.
</code></pre><p>]]>
    
    </summary>
    
      <category term="CSS" scheme="http://blog.gyf1.com/tags/css/"/>
    
      <category term="Style" scheme="http://blog.gyf1.com/categories/style/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Angular display multiple lined strings]]></title>
    <link href="http://blog.gyf1.com/2015/02/04/angular-display-multiple-lined-strings/"/>
    <id>http://blog.gyf1.com/2015/02/04/angular-display-multiple-lined-strings/</id>
    <published>2015-02-04T11:27:49.000Z</published>
    <updated>2015-02-05T07:33:57.000Z</updated>
    <content type="html"><![CDATA[<p>&#x5728;textarea&#x91CC;&#x9762;&#x8F93;&#x5165;&#x7684;&#x591A;&#x884C;&#x5185;&#x5BB9;&#xFF0C;&#x5982;&#x4F55;&#x6309;&#x7167;&#x591A;&#x884C;&#x663E;&#x793A;<br>&#x5982;&#x679C;&#x4EC0;&#x4E48;&#x90FD;&#x4E0D;&#x505A;&#x5904;&#x7406;&#xFF0C;&#x5185;&#x5BB9;&#x4F1A;&#x76F4;&#x63A5;&#x663E;&#x793A;&#x5728;&#x4E00;&#x884C;&#x4E0A;&#x9762;<br>&#x7B80;&#x5355;&#x7684;&#x505A;&#xFF0C;&#x76F4;&#x63A5;&#x5728;&#x663E;&#x793A;&#x524D;&#x5C06;&#x663E;&#x793A;&#x5185;&#x5BB9;&#x7684;&#x6362;&#x884C;&#x6362;&#x6210;br&#xFF0C;&#x7136;&#x540E;&#x9875;&#x9762;&#x4E0A;&#x4F7F;&#x7528;ng-bind-html</p>
<p>&#x597D;&#x4E00;&#x70B9;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6CD5;&#x662F;&#x5199;&#x4E00;&#x4E2A;filter<br>html</p>
<pre><code><span class="tag">&lt;<span class="title">div</span> <span class="attribute">ng-app</span>=<span class="value">&apos;app&apos;</span>&gt;</span>
  <span class="tag">&lt;<span class="title">textarea</span> <span class="attribute">ng-model</span>=<span class="value">&quot;StringValue&quot;</span>&gt;</span><span class="tag">&lt;/<span class="title">textarea</span>&gt;</span>
  <span class="tag">&lt;<span class="title">span</span> <span class="attribute">ng-bind-html-unsafe</span>=<span class="value">&quot;StringValue | breakFilter&quot;</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span>
<span class="tag">&lt;/<span class="title">div</span>&gt;</span>
</code></pre><p>js</p>
<pre><code><span class="keyword">var</span> app = angular.module(<span class="string">&apos;app&apos;</span>, []);

app.filter(<span class="string">&apos;breakFilter&apos;</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> {</span>
  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span><span class="params">(text)</span> {</span>
     <span class="keyword">return</span> text ? text.replace(<span class="regexp">/\n/g</span>, <span class="string">&apos;&lt;br /&gt;&apos;</span>) : <span class="string">&apos;&apos;</span>;
  }
});
</code></pre><a id="more"></a>

<p><a href="http://codepen.io/BrianGenisio/pen/sJuoz" target="_blank" rel="external">http://codepen.io/BrianGenisio/pen/sJuoz</a><br><a href="http://stackoverflow.com/questions/18513286/angular-displaying-multiple-lined-strings-on-one-line" target="_blank" rel="external">http://stackoverflow.com/questions/18513286/angular-displaying-multiple-lined-strings-on-one-line</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>&#x5728;textarea&#x91CC;&#x9762;&#x8F93;&#x5165;&#x7684;&#x591A;&#x884C;&#x5185;&#x5BB9;&#xFF0C;&#x5982;&#x4F55;&#x6309;&#x7167;&#x591A;&#x884C;&#x663E;&#x793A;<br>&#x5982;&#x679C;&#x4EC0;&#x4E48;&#x90FD;&#x4E0D;&#x505A;&#x5904;&#x7406;&#xFF0C;&#x5185;&#x5BB9;&#x4F1A;&#x76F4;&#x63A5;&#x663E;&#x793A;&#x5728;&#x4E00;&#x884C;&#x4E0A;&#x9762;<br>&#x7B80;&#x5355;&#x7684;&#x505A;&#xFF0C;&#x76F4;&#x63A5;&#x5728;&#x663E;&#x793A;&#x524D;&#x5C06;&#x663E;&#x793A;&#x5185;&#x5BB9;&#x7684;&#x6362;&#x884C;&#x6362;&#x6210;br&#xFF0C;&#x7136;&#x540E;&#x9875;&#x9762;&#x4E0A;&#x4F7F;&#x7528;ng-bind-html</p>
<p>&#x597D;&#x4E00;&#x70B9;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6CD5;&#x662F;&#x5199;&#x4E00;&#x4E2A;filter<br>html</p>
<pre><code><span class="tag">&lt;<span class="title">div</span> <span class="attribute">ng-app</span>=<span class="value">&apos;app&apos;</span>&gt;</span>
  <span class="tag">&lt;<span class="title">textarea</span> <span class="attribute">ng-model</span>=<span class="value">&quot;StringValue&quot;</span>&gt;</span><span class="tag">&lt;/<span class="title">textarea</span>&gt;</span>
  <span class="tag">&lt;<span class="title">span</span> <span class="attribute">ng-bind-html-unsafe</span>=<span class="value">&quot;StringValue | breakFilter&quot;</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span>
<span class="tag">&lt;/<span class="title">div</span>&gt;</span>
</code></pre><p>js</p>
<pre><code><span class="keyword">var</span> app = angular.module(<span class="string">&apos;app&apos;</span>, []);

app.filter(<span class="string">&apos;breakFilter&apos;</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> {</span>
  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span><span class="params">(text)</span> {</span>
     <span class="keyword">return</span> text ? text.replace(<span class="regexp">/\n/g</span>, <span class="string">&apos;&lt;br /&gt;&apos;</span>) : <span class="string">&apos;&apos;</span>;
  }
});
</code></pre>]]>
    
    </summary>
    
      <category term="AngularJS" scheme="http://blog.gyf1.com/tags/angularjs/"/>
    
      <category term="JavaScript" scheme="http://blog.gyf1.com/categories/javascript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Microdata]]></title>
    <link href="http://blog.gyf1.com/2015/02/03/microdata/"/>
    <id>http://blog.gyf1.com/2015/02/03/microdata/</id>
    <published>2015-02-03T11:24:35.000Z</published>
    <updated>2015-02-04T06:50:49.000Z</updated>
    <content type="html"><![CDATA[<p>&#x4E00;&#x4E2A;&#x9875;&#x9762;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x4F8B;&#x5982;&#x4EBA;&#x7269;&#x3001;&#x4E8B;&#x4EF6;&#x6216;&#x8BC4;&#x8BBA;&#x4E0D;&#x4EC5;&#x8981;&#x7ED9;&#x7528;&#x6237;&#x770B;&#xFF0C;&#x8FD8;&#x8981;&#x8BA9;&#x673A;&#x5668;&#x53EF;&#x8BC6;&#x522B;&#x3002;&#x800C;&#x76EE;&#x524D;&#x673A;&#x5668;&#x667A;&#x80FD;&#x7A0B;&#x5EA6;&#x6709;&#x9650;&#xFF0C;&#x8981;&#x8BA9;&#x5176;&#x77E5;&#x4F1A;&#x7279;&#x5B9A;&#x5185;&#x5BB9;&#x542B;&#x4E49;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x89C4;&#x5B9A;&#x7684;&#x6807;&#x7B7E;&#x3001;&#x5C5E;&#x6027;&#x540D;&#x4EE5;&#x53CA;&#x7279;&#x5B9A;&#x7528;&#x6CD5;&#x7B49;&#x3002;&#x4E3E;&#x4E2A;&#x7B80;&#x5355;&#x4F8B;&#x5B50;&#xFF0C;&#x6211;&#x4EEC;&#x4F7F;&#x7528;h1&#x6807;&#x7B7E;&#x5305;&#x88F9;&#x9875;&#x9762;&#x6807;&#x9898;&#x4FE1;&#x606F;&#x5C31;&#x662F;&#x4E3A;&#x4E86;&#x8BA9;&#x673A;&#x5668;&#x8BC6;&#x522B;&#xFF08;&#x641C;&#x7D22;&#x5F15;&#x64CE; &#x2013; SEO&#xFF09;&#x3002;</p>
<p><a id="more"></a><br><a href="http://stackoverflow.com/questions/12345458/what-is-div-itemtype-i-have-a-review-site-what-can-be-the-value-of-itemtype-for" target="_blank" rel="external">http://stackoverflow.com/questions/12345458/what-is-div-itemtype-i-have-a-review-site-what-can-be-the-value-of-itemtype-for</a><br><a href="http://www.zhangxinxu.com/wordpress/2011/12/html5%E6%89%A9%E5%B1%95-%E5%BE%AE%E6%95%B0%E6%8D%AE-%E4%B8%B0%E5%AF%8C%E7%BD%91%E9%A1%B5%E6%91%98%E8%A6%81/" target="_blank" rel="external">http://www.zhangxinxu.com/wordpress/2011/12/html5%E6%89%A9%E5%B1%95-%E5%BE%AE%E6%95%B0%E6%8D%AE-%E4%B8%B0%E5%AF%8C%E7%BD%91%E9%A1%B5%E6%91%98%E8%A6%81/</a><br><a href="http://www.htmlgoodies.com/html5/Web-Developer-Tutorial-HTML5-Microdata-3920016.htm#fbid=eBA7lfelrds" target="_blank" rel="external">http://www.htmlgoodies.com/html5/Web-Developer-Tutorial-HTML5-Microdata-3920016.htm#fbid=eBA7lfelrds</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>&#x4E00;&#x4E2A;&#x9875;&#x9762;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x4F8B;&#x5982;&#x4EBA;&#x7269;&#x3001;&#x4E8B;&#x4EF6;&#x6216;&#x8BC4;&#x8BBA;&#x4E0D;&#x4EC5;&#x8981;&#x7ED9;&#x7528;&#x6237;&#x770B;&#xFF0C;&#x8FD8;&#x8981;&#x8BA9;&#x673A;&#x5668;&#x53EF;&#x8BC6;&#x522B;&#x3002;&#x800C;&#x76EE;&#x524D;&#x673A;&#x5668;&#x667A;&#x80FD;&#x7A0B;&#x5EA6;&#x6709;&#x9650;&#xFF0C;&#x8981;&#x8BA9;&#x5176;&#x77E5;&#x4F1A;&#x7279;&#x5B9A;&#x5185;&#x5BB9;&#x542B;&#x4E49;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x89C4;&#x5B9A;&#x7684;&#x6807;&#x7B7E;&#x3001;&#x5C5E;&#x6027;&#x540D;&#x4EE5;&#x53CA;&#x7279;&#x5B9A;&#x7528;&#x6CD5;&#x7B49;&#x3002;&#x4E3E;&#x4E2A;&#x7B80;&#x5355;&#x4F8B;&#x5B50;&#xFF0C;&#x6211;&#x4EEC;&#x4F7F;&#x7528;h1&#x6807;&#x7B7E;&#x5305;&#x88F9;&#x9875;&#x9762;&#x6807;&#x9898;&#x4FE1;&#x606F;&#x5C31;&#x662F;&#x4E3A;&#x4E86;&#x8BA9;&#x673A;&#x5668;&#x8BC6;&#x522B;&#xFF08;&#x641C;&#x7D22;&#x5F15;&#x64CE; &#x2013; SEO&#xFF09;&#x3002;</p>
<p>]]>
    
    </summary>
    
      <category term="HTML" scheme="http://blog.gyf1.com/categories/html/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[difference between visibility:hidden and display:none]]></title>
    <link href="http://blog.gyf1.com/2015/02/03/difference-between-visibilityhidden-and-displaynone/"/>
    <id>http://blog.gyf1.com/2015/02/03/difference-between-visibilityhidden-and-displaynone/</id>
    <published>2015-02-03T11:17:30.000Z</published>
    <updated>2015-02-04T01:19:09.000Z</updated>
    <content type="html"><![CDATA[<p>What is the difference between visibility:hidden and display:none?</p>
<p><a id="more"></a><br>display:none means that the the tag in question will not appear on the page at all (although you can still interact with it through the dom). There will be no space allocated for it between the other tags.</p>
<p>visibility:hidden means that unlike display:none, the tag is not visible, but space is allocated for it on the page. The tag is rendered, it just isn&#x2019;t seen on the page.</p>
<p>For example:</p>
<pre><code>test | &lt;span style=<span class="string">&quot;[style-tag-value]&quot;</span>&gt;Appropriate style <span class="keyword">in</span> <span class="keyword">this</span> tag&lt;/span&gt; | test
</code></pre><p>Replacing [style-tag-value] with display:none results in:</p>
<p>test |   | test</p>
<p>Replacing [style-tag-value] with visibility:hidden results in:</p>
<p>test |                        | test</p>
<p><a href="http://stackoverflow.com/questions/133051/what-is-the-difference-between-visibilityhidden-and-displaynone" target="_blank" rel="external">http://stackoverflow.com/questions/133051/what-is-the-difference-between-visibilityhidden-and-displaynone</a><br><a href="http://webdesign.about.com/od/css/f/blfaqhidden.htm" target="_blank" rel="external">http://webdesign.about.com/od/css/f/blfaqhidden.htm</a><br><a href="http://blog.csdn.net/gaofeng2000/article/details/7058550" target="_blank" rel="external">http://blog.csdn.net/gaofeng2000/article/details/7058550</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>What is the difference between visibility:hidden and display:none?</p>
<p>]]>
    
    </summary>
    
      <category term="Style" scheme="http://blog.gyf1.com/categories/style/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[grunt task to generate spritesheet]]></title>
    <link href="http://blog.gyf1.com/2015/02/03/grunt-task-to-generate-spritesheet/"/>
    <id>http://blog.gyf1.com/2015/02/03/grunt-task-to-generate-spritesheet/</id>
    <published>2015-02-03T02:59:43.000Z</published>
    <updated>2015-02-03T06:10:28.000Z</updated>
    <content type="html"><![CDATA[<p><a href="https://github.com/Ensighten/grunt-spritesmith" target="_blank" rel="external">https://github.com/Ensighten/grunt-spritesmith</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="https://github.com/Ensighten/grunt-spritesmith" target="_blank" rel="external">https://github.com/Ensighten/grunt-spritesmith</a]]>
    </summary>
    
      <category term="Grunt" scheme="http://blog.gyf1.com/tags/grunt/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[A Dive Into Plain JavaScript]]></title>
    <link href="http://blog.gyf1.com/2015/02/01/a-dive-into-plain-javascript/"/>
    <id>http://blog.gyf1.com/2015/02/01/a-dive-into-plain-javascript/</id>
    <published>2015-02-01T08:52:38.000Z</published>
    <updated>2015-02-02T09:39:22.000Z</updated>
    <content type="html"><![CDATA[<p>While I&#x2019;ve worked over a decade building various websites,<br>it has only been the past 3 years that I&#x2019;ve started learning more on how to work with plain JavaScript,<br>instead of using jQuery always as the starting point.<br>The fact that I&#x2019;m learning a dozen new things every day now, has made working on Adtile&#x2019;s JavaScript SDK feel more like building an open source project than &#x201C;actual work,&#x201D;<br>and I have to say I like that a lot.</p>
<p>Today, I&#x2019;m going to share some of the basic things I&#x2019;ve learned during the past years,<br>which will hopefully also help you to dive into the world of plain JavaScript,<br>making it easier to decide whether or not you will need jQuery in your next project.</p>
<a id="more"></a>

<h1 id="Progressive_Enhancement">Progressive Enhancement</h1>
<p>While libraries like jQuery help to forget most of the browser inconsistencies, you really become familiar with them once you start using plain JavaScript for everything.<br>To avoid writing JavaScript that&#x2019;s full of browser hacks and code which only solves browser compatibility issues,<br>I recommend building a progressively enhanced experience using feature detection to only target the more modern browsers.<br>This doesn&#x2019;t mean that browsers like IE7 don&#x2019;t see anything at all, it just means that they get a more basic experience without JavaScript enhancements.</p>
<h2 id="Here&#x2019;s_How_We&#x2019;re_Doing_It">Here&#x2019;s How We&#x2019;re Doing It</h2>
<p>We have a separate JavaScript partial called &#x201C;feature.js&#x201D; which has all the feature tests.<br>The actual list of tests is much longer, but let&#x2019;s get back to this a bit later.<br>To rule out some of the older browsers we use these two tests:</p>
<pre><code><span class="function_or_atom">var</span> <span class="function_or_atom">feature</span> = {
  <span class="function_or_atom">addEventListener</span> : <span class="exclamation_mark">!</span><span class="exclamation_mark">!</span><span class="function_or_atom">window</span>.<span class="function_or_atom">addEventListener</span>,
  <span class="function_or_atom">querySelectorAll</span> : <span class="exclamation_mark">!</span><span class="exclamation_mark">!</span><span class="function_or_atom">document</span>.<span class="function_or_atom">querySelectorAll</span>,
};
</code></pre><p>Then, in the main application partial, we detect if these features are supported by using this simple &#x201C;if&#x201D; statement below.<br>If they aren&#x2019;t supported, the browser won&#x2019;t execute any of this code:</p>
<pre><code>if (feature<span class="preprocessor">.addEventListener</span> &amp;&amp; feature<span class="preprocessor">.querySelectorAll</span>) {
  this<span class="preprocessor">.init</span>()<span class="comment">;</span>
}
</code></pre><p>These two tests make sure that we have a native way of using CSS selectors in our JavaScript (querySelectorAll),<br>a way to easily add and remove events (addEventListener) and also that the browser&#x2019;s standards support is better than what IE8 has.<br>Read more about this technique called &#x201C;Cutting the mustard&#x201D; from BBC&#x2019;s blog.</p>
<h2 id="Browser_Support">Browser Support</h2>
<p>Here&#x2019;s a rough list of the browsers which support the features we are testing, and will hence keep executing the JavaScript:</p>
<ul>
<li>IE9+</li>
<li>Firefox 3.5+</li>
<li>Opera 9+</li>
<li>Safari 4+</li>
<li>Chrome 1+</li>
<li>iPhone and iPad iOS1+</li>
<li>Android phone and tablets 2.1+</li>
<li>Blackberry OS6+</li>
<li>Windows 7.5+</li>
<li>Mobile Firefox</li>
<li>Opera Mobile</li>
</ul>
<h1 id="The_Basics,_Plain_JavaSript_Way">The Basics, Plain JavaSript Way</h1>
<p>Let&#x2019;s start looking how the most basic and often needed functionalities work in plain JavaScript, compared to jQuery.<br>For each example, I&#x2019;m going to provide both the jQuery and plain JavaScript approach.</p>
<h2 id="Document_Ready">Document Ready</h2>
<p>With jQuery, many of you are probably used to using document.ready like so:</p>
<pre><code>$(document).ready(<span class="function"><span class="keyword">function</span><span class="params">()</span> {</span>
  <span class="comment">// Code</span>
});
</code></pre><p>But did you know that you can just put all of your JavaScript at the bottom of your page and that does basically the same thing?<br>JavaScript has also an event listener for the DOM content loaded event which you can use instead of jQuery&#x2019;s document.ready:</p>
<pre><code>document.addEventListener(<span class="string">&quot;DOMContentLoaded&quot;</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> {</span>
  <span class="comment">// Code</span>
}, <span class="literal">false</span>);
</code></pre><h2 id="Selectors_API">Selectors API</h2>
<p>JavaScript&#x2019;s native selectors API is very good. It works with CSS selectors and is very similar to what jQuery provides. If you are used to writing this in jQuery:</p>
<pre><code><span class="keyword">var</span> element = $(<span class="string">&quot;div&quot;</span>);
</code></pre><p>You can now replace that with:</p>
<pre><code><span class="reserved">var</span> element = <span class="built_in">document</span>.querySelector(<span class="string">&quot;div&quot;</span>);
</code></pre><p>Or, to select all div&#x2019;s inside some container:</p>
<pre><code><span class="reserved">var</span> elements = <span class="built_in">document</span>.querySelectorAll(<span class="string">&quot;.container div&quot;</span>);
</code></pre><p>You can also query against a specific element to find it&#x2019;s children:</p>
<pre><code><span class="reserved">var</span> navigation = <span class="built_in">document</span>.querySelector(<span class="string">&quot;nav&quot;</span>);
<span class="reserved">var</span> links = navigation.querySelectorAll(<span class="string">&quot;a&quot;</span>);
</code></pre><p>Quite straightforward, easy to understand, and doesn&#x2019;t really require much more writing now does it?<br>To go a little further, we could even build a tiny JavaScript library for ourselves for simple DOM querying.<br>Here&#x2019;s something that Andrew Lunny has came up with:</p>
<pre><code><span class="regexp">//</span> This gives us simple dollar <span class="reserved">function</span> <span class="keyword">and</span> event binding
<span class="reserved">var</span> $ = <span class="built_in">document</span>.querySelectorAll.bind(<span class="built_in">document</span>);
Element.prototype.<span class="literal">on</span> = Element.prototype.addEventListener;

<span class="regexp">//</span> This <span class="keyword">is</span> how you use it
$(<span class="string">&quot;.element&quot;</span>)[<span class="number">0</span>].<span class="literal">on</span>(<span class="string">&quot;touchstart&quot;</span>, handleTouch, <span class="literal">false</span>);
</code></pre><h2 id="Traversing_the_DOM">Traversing the DOM</h2>
<p>Traversing the DOM with plain JavaScript is a bit harder than it is with jQuery. But not too hard. Here are some simple examples:</p>
<pre><code><span class="comment">// Getting the parent node</span>
<span class="keyword">var</span> <span class="keyword">parent</span> = document.querySelector(<span class="string">&quot;div&quot;</span>).parentNode;

<span class="comment">// Getting the next node</span>
<span class="keyword">var</span> next = document.querySelector(<span class="string">&quot;div&quot;</span>).nextSibling;

<span class="comment">// Getting the previous node</span>
<span class="keyword">var</span> next = document.querySelector(<span class="string">&quot;div&quot;</span>).previousSibling;

<span class="comment">// Getting the first child element</span>
<span class="keyword">var</span> child = document.querySelector(<span class="string">&quot;div&quot;</span>).children[<span class="number">0</span>];

<span class="comment">// Getting the last child</span>
<span class="keyword">var</span> last = document.querySelector(<span class="string">&quot;div&quot;</span>).lastElementChild;
</code></pre><p><a href="http://blog.adtile.me/2014/01/16/a-dive-into-plain-javascript/" target="_blank" rel="external">http://blog.adtile.me/2014/01/16/a-dive-into-plain-javascript/</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>While I&#x2019;ve worked over a decade building various websites,<br>it has only been the past 3 years that I&#x2019;ve started learning more on how to work with plain JavaScript,<br>instead of using jQuery always as the starting point.<br>The fact that I&#x2019;m learning a dozen new things every day now, has made working on Adtile&#x2019;s JavaScript SDK feel more like building an open source project than &#x201C;actual work,&#x201D;<br>and I have to say I like that a lot.</p>
<p>Today, I&#x2019;m going to share some of the basic things I&#x2019;ve learned during the past years,<br>which will hopefully also help you to dive into the world of plain JavaScript,<br>making it easier to decide whether or not you will need jQuery in your next project.</p>
]]>
    
    </summary>
    
      <category term="JavaScript" scheme="http://blog.gyf1.com/categories/javascript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[JavaScript Scoping and Hoisting]]></title>
    <link href="http://blog.gyf1.com/2015/02/01/javascript-scoping-and-hoisting/"/>
    <id>http://blog.gyf1.com/2015/02/01/javascript-scoping-and-hoisting/</id>
    <published>2015-02-01T07:38:14.000Z</published>
    <updated>2015-02-02T08:27:19.000Z</updated>
    <content type="html"><![CDATA[<p>JavaScript Scoping and Hoisting</p>
<p>Do you know what value will be alerted if the following is executed as a JavaScript program?</p>
<pre><code><span class="keyword">var</span> foo = <span class="number">1</span>;
<span class="function"><span class="keyword">function</span> <span class="title">bar</span><span class="params">()</span> {</span>
    <span class="keyword">if</span> (!foo) {
        <span class="keyword">var</span> foo = <span class="number">10</span>;
    }
    alert(foo);
}
bar();
</code></pre><p>If it surprises you that the answer is &#x201C;10&#x201D;, then this one will probably really throw you for a loop:</p>
<pre><code><span class="keyword">var</span> a = <span class="number">1</span>;
<span class="function"><span class="keyword">function</span> <span class="title">b</span><span class="params">()</span> {</span>
    a = <span class="number">10</span>;
    <span class="keyword">return</span>;
    <span class="function"><span class="keyword">function</span> <span class="title">a</span><span class="params">()</span> {</span>console.log(<span class="string">&apos;!&apos;</span>);}
}
b();
alert(a);
</code></pre><p>Here, of course, the browser will alert &#x201C;1&#x201D;. So what&#x2019;s going on here?<br>While it might seem strange, dangerous, and confusing, this is actually a powerful and expressive feature of the language.<br>I don&#x2019;t know if there is a standard name for this specific behavior, but I&#x2019;ve come to like the term &#x201C;hoisting&#x201D;.<br>This article will try to shed some light on this mechanism, but first lets take a necessary detour to understand JavaScript&#x2019;s scoping.<br><a id="more"></a></p>
<h1 id="Scoping_in_JavaScript">Scoping in JavaScript</h1>
<p>One of the sources of most confusion for JavaScript beginners is scoping.<br>Actually, it&#x2019;s not just beginners.<br>I&#x2019;ve met a lot of experienced JavaScript programmers who don&#x2019;t fully understand scoping.<br>The reason scoping is so confusing in JavaScript is because it looks like a C-family language.<br>Consider the following C program:</p>
<pre><code><span class="preprocessor">#include &lt;stdio.h&gt;</span>
<span class="keyword">int</span> main() {
    <span class="keyword">int</span> x = <span class="number">1</span>;
    <span class="built_in">printf</span>(<span class="string">&quot;%d, &quot;</span>, x); <span class="comment">// 1</span>
    <span class="keyword">if</span> (<span class="number">1</span>) {
        <span class="keyword">int</span> x = <span class="number">2</span>;
        <span class="built_in">printf</span>(<span class="string">&quot;%d, &quot;</span>, x); <span class="comment">// 2</span>
    }
    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, x); <span class="comment">// 1</span>
}
</code></pre><p>The output from this program will be 1, 2, 1.<br>This is because C, and the rest of the C family, has block-level scope.<br>When control enters a block, such as the if statement, new variables can be declared within that scope, without affecting the outer scope.<br>This is not the case in JavaScript. Try the following in Firebug:</p>
<pre><code><span class="built_in">var</span> x <span class="subst">=</span> <span class="number">1</span>;
console<span class="built_in">.</span><span class="keyword">log</span>(x); <span class="comment">// 1</span>
<span class="keyword">if</span> (<span class="literal">true</span>) {
    <span class="built_in">var</span> x <span class="subst">=</span> <span class="number">2</span>;
    console<span class="built_in">.</span><span class="keyword">log</span>(x); <span class="comment">// 2</span>
}
console<span class="built_in">.</span><span class="keyword">log</span>(x); <span class="comment">// 2</span>
</code></pre><p>In this case, Firebug will show 1, 2, 2.<br>This is because JavaScript has function-level scope.<br>This is radically different from the C family.<br>Blocks, such as if statements, do not create a new scope. Only functions create a new scope.</p>
<p>To a lot of programmers who are used to languages like C, C++, C#, or Java, this is unexpected and unwelcome.<br>Luckily, because of the flexibility of JavaScript functions, there is a workaround.<br>If you must create temporary scopes within a function, do the following:</p>
<pre><code><span class="function"><span class="keyword">function</span> <span class="title">foo</span><span class="params">()</span> {</span>
    <span class="keyword">var</span> x = <span class="number">1</span>;
    <span class="keyword">if</span> (x) {
        (<span class="function"><span class="keyword">function</span> <span class="params">()</span> {</span>
            <span class="keyword">var</span> x = <span class="number">2</span>;
            <span class="comment">// some other code</span>
        }());
    }
    <span class="comment">// x is still 1.</span>
}
</code></pre><p>This method is actually quite flexible, and can be used anywhere you need a temporary scope, not just within block statements.<br>However, I strongly recommend that you take the time to really understand and appreciate JavaScript scoping.<br>It&#x2019;s quite powerful, and one of my favorite features of the language.<br>If you understand scoping, hoisting will make a lot more sense to you.</p>
<h1 id="Declarations,_Names,_and_Hoisting">Declarations, Names, and Hoisting</h1>
<p>In JavaScript, a name enters a scope in one of four basic ways:</p>
<ol>
<li>Language-defined: All scopes are, by default, given the names this and arguments.</li>
<li>Formal parameters: Functions can have named formal parameters, which are scoped to the body of that function.</li>
<li>Function declarations: These are of the form function foo() {}.</li>
<li>Variable declarations: These take the form var foo;.</li>
</ol>
<p>Function declarations and variable declarations are always moved (&#x201C;hoisted&#x201D;) invisibly to the top of their containing scope by the JavaScript interpreter.<br>Function parameters and language-defined names are, obviously, already there. This means that code like this:</p>
<pre><code><span class="function"><span class="keyword">function</span> <span class="title">foo</span><span class="params">()</span> {</span>
    bar();
    <span class="keyword">var</span> x = <span class="number">1</span>;
}
</code></pre><p>is actually interpreted like this:</p>
<pre><code><span class="function"><span class="keyword">function</span> <span class="title">foo</span><span class="params">()</span> {</span>
    <span class="keyword">var</span> x;
    bar();
    x = <span class="number">1</span>;
}
</code></pre><p>It turns out that it doesn&#x2019;t matter whether the line that contains the declaration would ever be executed. The following two functions are equivalent:</p>
<pre><code><span class="function"><span class="keyword">function</span> <span class="title">foo</span><span class="params">()</span> {</span>
    <span class="keyword">if</span> (<span class="literal">false</span>) {
        <span class="keyword">var</span> x = <span class="number">1</span>;
    }
    <span class="keyword">return</span>;
    <span class="keyword">var</span> y = <span class="number">1</span>;
}
<span class="function"><span class="keyword">function</span> <span class="title">foo</span><span class="params">()</span> {</span>
    <span class="keyword">var</span> x, y;
    <span class="keyword">if</span> (<span class="literal">false</span>) {
        x = <span class="number">1</span>;
    }
    <span class="keyword">return</span>;
    y = <span class="number">1</span>;
}
</code></pre><p>Notice that the assignment portion of the declarations were not hoisted.<br>Only the name is hoisted.<br>This is not the case with function declarations, where the entire function body will be hoisted as well.<br>But remember that there are two normal ways to declare functions. Consider the following JavaScript:</p>
<pre><code><span class="function"><span class="keyword">function</span> <span class="title">test</span><span class="params">()</span></span> {
    foo(); // TypeError <span class="string">&quot;foo is not a function&quot;</span>
    bar(); // <span class="string">&quot;this will run!&quot;</span>
    var foo = <span class="function"><span class="keyword">function</span> <span class="params">()</span></span> { // <span class="function"><span class="keyword">function</span> <span class="title">expression</span> <span class="title">assigned</span> <span class="title">to</span> <span class="title">local</span> <span class="title">variable</span> &apos;<span class="title">foo</span>&apos;
        <span class="title">alert</span><span class="params">(&quot;this won&apos;t run!&quot;)</span></span>;
    }
    <span class="function"><span class="keyword">function</span> <span class="title">bar</span><span class="params">()</span></span> { // <span class="function"><span class="keyword">function</span> <span class="title">declaration</span>, <span class="title">given</span> <span class="title">the</span> <span class="title">name</span> &apos;<span class="title">bar</span>&apos;
        <span class="title">alert</span><span class="params">(&quot;this will run!&quot;)</span></span>;
    }
}
test();
</code></pre><p>In this case, only the function declaration has its body hoisted to the top.<br>The name &#x2018;foo&#x2019; is hoisted, but the body is left behind, to be assigned during execution.</p>
<p>That covers the basics of hoisting, which is not as complex or confusing as it seems.<br>Of course, this being JavaScript, there is a little more complexity in certain special cases.</p>
<h1 id="Name_Resolution_Order">Name Resolution Order</h1>
<p>The most important special case to keep in mind is name resolution order.<br>Remember that there are four ways for names to enter a given scope.<br>The order I listed them above is the order they are resolved in.<br>In general, if a name has already been defined, it is never overridden by another property of the same name.<br>This means that a function declaration takes priority over a variable declaration.<br>This does not mean that an assignment to that name will not work, just that the declaration portion will be ignored.<br>There are a few exceptions:</p>
<ul>
<li>The built-in name arguments behaves oddly. It seems to be declared following the formal parameters, but before function declarations. This means that a formal parameter with the name arguments will take precedence over the built-in, even if it is undefined. This is a bad feature. Don&#x2019;t use the name arguments as a formal parameter.</li>
<li>Trying to use the name this as an identifier anywhere will cause a SyntaxError. This is a good feature.</li>
<li>If multiple formal parameters have the same name, the one occurring latest in the list will take precedence, even if it is undefined.</li>
</ul>
<h1 id="Named_Function_Expressions">Named Function Expressions</h1>
<p>You can give names to functions defined in function expressions, with syntax like a function declaration.<br>This does not make it a function declaration, and the name is not brought into scope, nor is the body hoisted.<br>Here&#x2019;s some code to illustrate what I mean:</p>
<pre><code>foo(); <span class="comment">// TypeError &quot;foo is not a function&quot;</span>
bar(); <span class="comment">// valid</span>
baz(); <span class="comment">// TypeError &quot;baz is not a function&quot;</span>
spam(); <span class="comment">// ReferenceError &quot;spam is not defined&quot;</span>

<span class="keyword">var</span> foo = <span class="function"><span class="keyword">function</span> <span class="params">()</span> {</span>}; <span class="comment">// anonymous function expression (&apos;foo&apos; gets hoisted)</span>
<span class="function"><span class="keyword">function</span> <span class="title">bar</span><span class="params">()</span> {</span>}; <span class="comment">// function declaration (&apos;bar&apos; and the function body get hoisted)</span>
<span class="keyword">var</span> baz = <span class="function"><span class="keyword">function</span> <span class="title">spam</span><span class="params">()</span> {</span>}; <span class="comment">// named function expression (only &apos;baz&apos; gets hoisted)</span>

foo(); <span class="comment">// valid</span>
bar(); <span class="comment">// valid</span>
baz(); <span class="comment">// valid</span>
spam(); <span class="comment">// ReferenceError &quot;spam is not defined&quot;</span>
</code></pre><h1 id="How_to_Code_With_This_Knowledge">How to Code With This Knowledge</h1>
<p>Now that you understand scoping and hoisting, what does that mean for coding in JavaScript?<br>The most important thing is to always declare your variables with a var statement.<br>I strongly recommend that you have exactly one var statement per scope, and that it be at the top.<br>If you force yourself to do this, you will never have hoisting-related confusion.<br>However, doing this can make it hard to keep track of which variables have actually been declared in the current scope.<br>I recommend using JSLint with the onevar option to enforce this. If you&#x2019;ve done all of this, your code should look something like this:</p>
<pre><code>/*jslint onevar: true [<span class="keyword">...</span>] */
<span class="keyword">function</span> foo(a, b, c) {
    var x = <span class="number">1</span>,
        bar,
        baz = <span class="string">&quot;something&quot;</span>;
}
</code></pre><h1 id="What_the_Standard_Says">What the Standard Says</h1>
<p>I find that it&#x2019;s often useful to just consult the ECMAScript Standard (pdf) directly to understand how these things work.<br>Here&#x2019;s what it has to say about variable declarations and scope (section 12.2.2 in the older version):</p>
<pre><code>If <span class="keyword">the</span> variable statement occurs inside a FunctionDeclaration,
<span class="keyword">the</span> variables are defined <span class="keyword">with</span> function-<span class="keyword">local</span> scope <span class="keyword">in</span> <span class="keyword">that</span> function, <span class="keyword">as</span> described <span class="keyword">in</span> section <span class="number">10.1</span><span class="number">.3</span>.
Otherwise, they are defined <span class="keyword">with</span> <span class="keyword">global</span> scope (<span class="keyword">that</span> <span class="keyword">is</span>, they are created <span class="keyword">as</span> members <span class="keyword">of</span> <span class="keyword">the</span> <span class="keyword">global</span> object, <span class="keyword">as</span> described <span class="keyword">in</span> section <span class="number">10.1</span><span class="number">.3</span>) using <span class="keyword">property</span> attributes { DontDelete }.
Variables are created when <span class="keyword">the</span> execution scope <span class="keyword">is</span> entered. A Block <span class="keyword">does</span> <span class="keyword">not</span> define a new execution scope.
Only Program <span class="keyword">and</span> FunctionDeclaration produce a new scope. Variables are initialised <span class="keyword">to</span> undefined when created.
A variable <span class="keyword">with</span> an Initialiser <span class="keyword">is</span> assigned <span class="keyword">the</span> value <span class="keyword">of</span> <span class="keyword">its</span> AssignmentExpression when <span class="keyword">the</span> VariableStatement <span class="keyword">is</span> executed, <span class="keyword">not</span> when <span class="keyword">the</span> variable <span class="keyword">is</span> created.
</code></pre><p>I hope this article has shed some light on one of the most common sources of confusion to JavaScript programmers.<br>I have tried to be as thorough as possible, to avoid creating more confusion. If I have made any mistakes or have large omissions, please let me know.</p>
<p>&#x539F;&#x6587;<br><a href="http://www.adequatelygood.com/JavaScript-Scoping-and-Hoisting.html" target="_blank" rel="external">http://www.adequatelygood.com/JavaScript-Scoping-and-Hoisting.html</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>JavaScript Scoping and Hoisting</p>
<p>Do you know what value will be alerted if the following is executed as a JavaScript program?</p>
<pre><code><span class="keyword">var</span> foo = <span class="number">1</span>;
<span class="function"><span class="keyword">function</span> <span class="title">bar</span><span class="params">()</span> {</span>
    <span class="keyword">if</span> (!foo) {
        <span class="keyword">var</span> foo = <span class="number">10</span>;
    }
    alert(foo);
}
bar();
</code></pre><p>If it surprises you that the answer is &#x201C;10&#x201D;, then this one will probably really throw you for a loop:</p>
<pre><code><span class="keyword">var</span> a = <span class="number">1</span>;
<span class="function"><span class="keyword">function</span> <span class="title">b</span><span class="params">()</span> {</span>
    a = <span class="number">10</span>;
    <span class="keyword">return</span>;
    <span class="function"><span class="keyword">function</span> <span class="title">a</span><span class="params">()</span> {</span>console.log(<span class="string">&apos;!&apos;</span>);}
}
b();
alert(a);
</code></pre><p>Here, of course, the browser will alert &#x201C;1&#x201D;. So what&#x2019;s going on here?<br>While it might seem strange, dangerous, and confusing, this is actually a powerful and expressive feature of the language.<br>I don&#x2019;t know if there is a standard name for this specific behavior, but I&#x2019;ve come to like the term &#x201C;hoisting&#x201D;.<br>This article will try to shed some light on this mechanism, but first lets take a necessary detour to understand JavaScript&#x2019;s scoping.<br>]]>
    
    </summary>
    
      <category term="JavaScript" scheme="http://blog.gyf1.com/categories/javascript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[css underline attributes for ie]]></title>
    <link href="http://blog.gyf1.com/2015/02/01/css-underline-attributes-for-ie/"/>
    <id>http://blog.gyf1.com/2015/02/01/css-underline-attributes-for-ie/</id>
    <published>2015-02-01T06:11:07.000Z</published>
    <updated>2015-02-03T06:15:28.000Z</updated>
    <content type="html"><![CDATA[<p>CSS &#x4E2D; _width&#x3001;_height &#x662F;&#x4EC0;&#x4E48;&#x610F;&#x601D;&#xFF1F;</p>
<p>CSS &#x5C5E;&#x6027;&#x524D;&#x9762;&#x52A0;&#x4E86;&#x4E0B;&#x5212;&#x7EBF;&#x201C;_&#x201D;&#xFF0C;&#x5728; IE 6 &#x4E2D;&#xFF0C;&#x8DDF;&#x6CA1;&#x52A0;&#x4E0B;&#x5212;&#x7EBF;&#x6548;&#x679C;&#x76F8;&#x540C;&#x3002;</p>
<p>&#x5982;&#xFF1A;_width &#x7B49;&#x4EF7;&#x4E8E; width&#xFF1B;_height &#x7B49;&#x4EF7;&#x4E8E; height&#xFF1B;_color &#x7B49;&#x4EF7;&#x4E8E; color&#x2026;&#x2026;</p>
<p>&#x4E5F;&#x6709;&#x7528;&#x201C;\&#x201D;&#x7684;&#xFF0C;&#x6BD4;&#x5982;&#x201C;\width&#x201D;&#x7B49;&#x4EF7;&#x4E8E; width&#x3002;&#x4F46;&#x5176;&#x5E94;&#x7528;&#x8303;&#x56F4;&#x6709;&#x9650;&#xFF0C;&#x6BD4;&#x5982;&#x201C;\color&#x201D;&#x5C31;&#x8BA4;&#x4E0D;&#x5230;&#x3002;<br><a id="more"></a></p>
<p>&#x7C7B;&#x4F3C;&#x8FD9;&#x79CD;&#x524D;&#x9762;&#x5E26;&#x4E0B;&#x5212;&#x7EBF;&#x7684;css&#x6837;&#x5F0F;_position  _display _width _height&#x662F;&#x4EC0;&#x4E48;&#x610F;&#x601D;&#xFF1F;</p>
<p>&#x4E0D;&#x52A0;&#x4E0B;&#x5212;&#x7EBF;&#x7684;css&#x6837;&#x5F0F;position  display width height&#x6211;&#x90FD;&#x77E5;&#x9053;&#x662F;&#x4EC0;&#x4E48;&#xFF0C;&#x4F46;&#x662F;&#x52A0;&#x4E86;&#x4E0B;&#x5212;&#x7EBF;&#x540E;&#x662F;&#x4EC0;&#x4E48;&#x4E1C;&#x897F;&#x5462;&#xFF1F;<br>&#x7C7B;&#x4F3C;&#x8FD9;&#x79CD;&#xFF1A;_position  _display _width _height</p>
<p>&#x662F;&#x4E3A;&#x4E86;CSS HACK&#xFF0C;&#x60F3;&#x8BA9;&#x5728;IE6&#x4E0B;&#x663E;&#x793A;&#x7684;&#x548C;&#x5176;&#x4ED6;&#x7248;&#x672C;&#x7684;IE&#x4E2D;&#x663E;&#x793A;&#x4E00;&#x6837;&#xFF0C;&#x9700;&#x8981;&#x7279;&#x522B;&#x4E3A;IE6&#x5199;CSS&#x4EE3;&#x7801;&#xFF0C;&#x5E26;&#x4E0B;&#x5212;&#x7EBF;&#x7684;&#x5C31;&#x53EA;&#x6709;IE6&#x80FD;&#x8BA4;&#x8BC6;&#xFF0C;&#x6240;&#x4EE5;&#x53EA;&#x6709;IE6&#x4F1A;&#x6309;&#x5B83;&#x540E;&#x9762;&#x7684;CSS&#x8BBE;&#x7F6E;&#x5904;&#x7406;&#x3002;</p>
<p><a href="http://stackoverflow.com/questions/10335446/what-does-height-mean-in-css" target="_blank" rel="external">http://stackoverflow.com/questions/10335446/what-does-height-mean-in-css</a><br><a href="http://www.cftea.com/c/2009/11/9DEQ6F51Z8B1QXJN.asp" target="_blank" rel="external">http://www.cftea.com/c/2009/11/9DEQ6F51Z8B1QXJN.asp</a><br><a href="http://bbs.blueidea.com/thread-2867074-1-1.html" target="_blank" rel="external">http://bbs.blueidea.com/thread-2867074-1-1.html</a><br><a href="http://zhidao.baidu.com/question/114226381.html" target="_blank" rel="external">http://zhidao.baidu.com/question/114226381.html</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>CSS &#x4E2D; _width&#x3001;_height &#x662F;&#x4EC0;&#x4E48;&#x610F;&#x601D;&#xFF1F;</p>
<p>CSS &#x5C5E;&#x6027;&#x524D;&#x9762;&#x52A0;&#x4E86;&#x4E0B;&#x5212;&#x7EBF;&#x201C;_&#x201D;&#xFF0C;&#x5728; IE 6 &#x4E2D;&#xFF0C;&#x8DDF;&#x6CA1;&#x52A0;&#x4E0B;&#x5212;&#x7EBF;&#x6548;&#x679C;&#x76F8;&#x540C;&#x3002;</p>
<p>&#x5982;&#xFF1A;_width &#x7B49;&#x4EF7;&#x4E8E; width&#xFF1B;_height &#x7B49;&#x4EF7;&#x4E8E; height&#xFF1B;_color &#x7B49;&#x4EF7;&#x4E8E; color&#x2026;&#x2026;</p>
<p>&#x4E5F;&#x6709;&#x7528;&#x201C;\&#x201D;&#x7684;&#xFF0C;&#x6BD4;&#x5982;&#x201C;\width&#x201D;&#x7B49;&#x4EF7;&#x4E8E; width&#x3002;&#x4F46;&#x5176;&#x5E94;&#x7528;&#x8303;&#x56F4;&#x6709;&#x9650;&#xFF0C;&#x6BD4;&#x5982;&#x201C;\color&#x201D;&#x5C31;&#x8BA4;&#x4E0D;&#x5230;&#x3002;<br>]]>
    
    </summary>
    
      <category term="Style" scheme="http://blog.gyf1.com/categories/style/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[config android environment on mac]]></title>
    <link href="http://blog.gyf1.com/2015/01/29/config-android-environment-on-mac/"/>
    <id>http://blog.gyf1.com/2015/01/29/config-android-environment-on-mac/</id>
    <published>2015-01-29T14:28:46.000Z</published>
    <updated>2015-01-29T06:38:32.000Z</updated>
    <content type="html"><![CDATA[<p>&#x9996;&#x5148;&#x4E0B;&#x8F7D;android sdk<br><a href="http://developer.android.com/sdk/installing/index.html?pkg=tools" target="_blank" rel="external">Installing the Stand-alone SDK Tools</a></p>
<p>&#x4E0B;&#x8F7D;&#x4E0B;&#x6765;&#x540E;&#x89E3;&#x538B;&#x5230;&#x4E00;&#x4E2A;&#x76EE;&#x5F55;&#x91CC;&#x9762;</p>
<p>&#x6253;&#x5F00;&#x7EC8;&#x7AEF;<br>export ANDROID_HOME=&#x201D;/Users/guoyinfeng/Development/android-sdk-macosx&#x201D;<br>export PATH=${PATH}:/Users/guoyinfeng/Development/android-sdk-macosx/tools</p>
<p>&#x4E24;&#x4E2A;&#x547D;&#x4EE4;&#x8F93;&#x5165;&#x5B8C;&#x4E86;&#x540E;&#xFF0C;&#x5C31;ok&#x4E86;</p>
<p>&#x4F7F;&#x7528;androd&#x547D;&#x4EE4;&#x53EF;&#x4EE5;&#x5728;&#x6253;&#x5F00;&#x7A97;&#x53E3;&#x4E2D;&#x505A;&#x4E00;&#x4E9B;&#x64CD;&#x4F5C;&#x914D;&#x7F6E;</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>&#x9996;&#x5148;&#x4E0B;&#x8F7D;android sdk<br><a href="http://developer.android.com/sdk/installing/index.html?pkg=tools" target="_blank"]]>
    </summary>
    
      <category term="Android" scheme="http://blog.gyf1.com/tags/android/"/>
    
      <category term="Mobile" scheme="http://blog.gyf1.com/categories/mobile/"/>
    
  </entry>
  
</feed>
